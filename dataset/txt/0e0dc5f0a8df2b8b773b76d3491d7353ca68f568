Security Target

OPTIGATM Trusted Platform Module
SLB9670_2.0 v7.85
Common Criteria CCv3.1 EAL4 augmented (EAL4+)
Resistance to attackers with MODERATE attack potential




Version:   1.1
Date:      2018-10-12

PUBLIC
Autor: Jürgen Noller, Digital Security Solutions, SQM PS


Edi               Hash Standard (SHS) [F1804]




FCS_COP.1/HMAC                Cryptographic operation (HMAC calculation)
              Hierarchical to:        No other components.
              Dependencies:           [FDP_ITC.1 Import of user data without security attributes, or
                                      FDP_ITC.2 Import of user data with security attributes, or
                                      FCS_CKM.1 Cryptographic key generation]
                                      FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/HMAC The TSF shall perform HMAC value generation and verification in
            accordance with a specified cryptographic algorithm HMAC with SHA-1, SHA-256
            and none and cryptographic key sizes 160 bits and 256 bits that meet the following:
                          ISO/IEC 9797-2, Information technology -- Security techniques –
                           Message authentication codes (MACs) -- Part 2: Mechanisms
                           using a dedicated hash-function [9797]
                          ISO/IEC 10118-3: 2004, Information technology -- Security techniques --
                           Hashfunctions -- Part 3: Dedicated hash-functions [10118]




FCS_COP.1/RSAED1              Cryptographic operation (asymmetric encryption/decryption)

             Hierarchical to:        No other components.
             Dependencies:           [FDP_ITC.1 Import of user data without security attributes, or
                                     FDP_ITC.2 Import of user data with security attributes, or
                                     FCS_CKM.1 Cryptographic key generation]
                                     FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/RSAED1        The TSF shall perform asymmetric encryption and decryption in
            accordance with a specified cryptographic algorithm RSA without padding, RSAES-
            PKCS1-v1_5, RSAES-OAEP, and cryptographic key sizes 1024 bit that meet the
            following: PKCS#1v2.1 [RFC3447], and

             RSA encryption:

                     1. According to section "5.1.1 RSAEP” in PKCS#1 v2.1 [RFC3447]
                            Supported for n < 2 1024+32
                            5.1.1 (1) not supported
                        and with padding
                            RSAES-PKCS1-v1_5, [RFC3447] according section 7.2
SLB9670_2.0 v7.85   v1.1                                                                     27 of 59
                                                    Security Target for SLB9670_2.0 v7.85
                               RSAES-OAEP, [RFC3447] according section 7.1

             RSA decryption:

                     2. According to section "5.1.2 RSADP” in PKCS#1 v2.1 [RFC3447]
                        for u = 2, i.e., without any (ri, di ,ti); i > 2:
                             5.1.2(1) not supported
                             5.1.2(2.a) supported for n < 21024+32
                             5.1.2(2.b) supported for p*q < 2 1024+32
                             5.1.2(2.b) (ii)&(v) not applicable due to u = 2
                        and with padding
                             RSAES-PKCS1-v1_5, [RFC3447] according section 7.2
                             RSAES-OAEP, [RFC3447] according section 7.1




FCS_COP.1/RSAED Cryptographic operation (asymmetric encryption/decryption)

             Hierarchical to:      No other components.
             Dependencies:         [FDP_ITC.1 Import of user data without security attributes, or
                                   FDP_ITC.2 Import of user data with security attributes, or
                                   FCS_CKM.1 Cryptographic key generation]
                                   FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/RSAED         The TSF shall perform asymmetric encryption and decryption in
            accordance with a specified cryptographic algorithm RSA without padding, RSAES-
            PKCS1-v1_5, RSAES-OAEP, and cryptographic key sizes 2048 bit that meet the
            following: PKCS#1v2.1 [RFC3447], and

             RSA encryption:

                     1. According to section "5.1.1 RSAEP” in PKCS#1 v2.1 [RFC3447]
                            Supported for n < 2 2048+64
                            5.1.1 (1) not supported
                        and with padding
                            RSAES-PKCS1-v1_5, [RFC3447] according section 7.2
                            RSAES-OAEP, [RFC3447] according section 7.1

             RSA decryption:

                     2. According to section "5.1.2 RSADP” in PKCS#1 v2.1 [RFC3447]
                        for u = 2, i.e., without any (ri, di ,ti); i > 2:
                             5.1.2(1) not supported
                             5.1.2(2.a) supported for n < 22048+64
                             5.1.2(2.b) supported for p*q < 2 2048+64
                             5.1.2(2.b) (ii)&(v) not applicable due to u = 2
                        and with padding
                             RSAES-PKCS1-v1_5, [RFC3447] according section 7.2
                             RSAES-OAEP, [RFC3447] according section 7.1.


FCS_COP.1/RSASign1 Cryptographic operation (RSA signature generation/verification)

SLB9670_2.0 v7.85   v1.1                                                                  28 of 59
                                                     Security Target for SLB9670_2.0 v7.85
             Hierarchical to:       No other components.
             Dependencies:          [FDP_ITC.1 Import of user data without security attributes, or
                                    FDP_ITC.2 Import of user data with security attributes, or
                                    FCS_CKM.1 Cryptographic key generation]
                                    FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/RSASign1 The TSF shall perform signature generation and verification in
            accordance with a specified cryptographic algorithms RSASSA-PKCS1-v1_5 and
            RSASSA_PSS, and cryptographic key sizes 1024 bit that meet the following:
            PKCS#1v2.1 [RFC3447], and

             RSA signature generation:

                           1. According to section "5.2.1 RSASP1” in PKCS#1 v2.1 [RFC3447]
                              for u = 2, i.e., without any (ri, di ,ti); i > 2:
                               5.2.1(1) not supported
                               5.2.1(2.a) supported for n < 21024+32
                               5.2.1(2b) supported for p*q < 2 1024+32
                               5.2.1(2.b) (ii)&(v) not applicable due to u = 2
                           and with
                               RSASSA-PKCS1-v1_5, [RFC3447] according section 8.2
                               RSASSA_PSS, [RFC3447] according section 8.1


             RSA signature verification:

                           2. According to section "5.2.2 RSAVP1” in PKCS#1 v2.1 [RFC3447]
                               Supported for n < 2 1024+32
                               5.1.1 (1) not supported
                           and with
                               RSASSA-PKCS1-v1_5, [RFC3447] according section 8.2
                               RSASSA_PSS, [RFC3447] according section 8.1



FCS_COP.1/RSASign Cryptographic operation (RSA signature generation/verification)

             Hierarchical to:       No other components.
             Dependencies:          [FDP_ITC.1 Import of user data without security attributes, or
                                    FDP_ITC.2 Import of user data with security attributes, or
                                    FCS_CKM.1 Cryptographic key generation]
                                    FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/RSASign The TSF shall perform signature generation and verification in
            accordance with a specified cryptographic algorithm RSASSA-PKCS1-v1_5,
            RSASSA_PSS, and cryptographic key sizes 2048 bit that meet the following:
            PKCS#1v2.1 [RFC3447], and

             RSA signature generation:

                     1. According to section "5.2.1 RSASP1” in PKCS#1 v2.1 [RFC3447]
                        for u = 2, i.e., without any (ri, di ,ti); i > 2:
                             5.2.1(1) not supported
                             5.2.1(2.a) supported for n < 22048+64
                             5.2.1(2b) supported for p*q < 2 2048+64
                             5.2.1(2.b) (ii)&(v) not applicable due to u = 2
SLB9670_2.0 v7.85   v1.1                                                                   29 of 59
                                                      Security Target for SLB9670_2.0 v7.85

                           and with
                               RSASSA-PKCS1-v1_5, [RFC3447] according section 8.2
                               RSASSA_PSS, [RFC3447] according section 8.1

             RSA signature verification:

                     2. According to section "5.2.2 RSAVP1” in PKCS#1 v2.1 [RFC3447]
                            Supported for n < 2 2048+64
                            5.1.1 (1) not supported
                        and with
                            RSASSA-PKCS1-v1_5, [RFC3447] according section 8.2
                            RSASSA_PSS, [RFC3447] according section 8.1




FCS_COP.1/ECDSA               Cryptographic operation (ECC signature generation/verification)


             Hierarchical to:        No other components.
             Dependencies:           [FDP_ITC.1 Import of user data without security attributes, or
                                     FDP_ITC.2 Import of user data with security attributes, or
                                     FCS_CKM.1 Cryptographic key generation]
                                     FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/ECDSA          The TSF shall perform signature generation and verification in
            accordance with a specified cryptographic algorithm ECDSA with curve
            TPM_ECC_NIST_P256, and none and cryptographic key sizes 256 bit and none
            that meet the following:

             ECDSA signature generation:

                     1. According to section "6.4.3 Signature process" in ISO/IEC 14888-3:2006
                        [14888]:
                             6.4.3.3 not supported
                             6.4.3.5 not supported: – the hash-code H of the message has to
                                be provided by the caller as input to our function.
                             6.4.3.7 not supported
                             6.4.3.8 not supported
                        with curve
                             ECC_NIST_P256 [F1864]

             ECDSA signature verification:

                     2. According to section "6.4.4 Signature Verification Process" in ISO/IEC
                        14888-3:2006 [14888]:
                             6.4.4.2 not supported
                             6.4.4.3 not supported: – the hash-code H of the message has to
                                be provided by the caller as input to our function.
                        with curve
                                  ECC_NIST_P256 [F1864]

FCS_COP.1/ECDAA               Cryptographic operation (ECDAA commit)

             Hierarchical to:       No other components.
SLB9670_2.0 v7.85   v1.1                                                                    30 of 59
                                                       Security Target for SLB9670_2.0 v7.85
              Dependencies:          [FDP_ITC.1 Import of user data without security attributes, or
                                     FDP_ITC.2 Import of user data with security attributes, or
                                     FCS_CKM.1 Cryptographic key generation]
                                     FCS_CKM.4 Cryptographic key destruction


FCS_COP.1.1/ECDAA         The TSF shall perform signature generation in accordance with a
           specified cryptographic algorithm ECDAA with curve TPM_ECC_NIST_P256,
           TPM_ECC_BN_P256 and none and cryptographic key sizes 256 and none that
           meet the following: TPM library specification [5], section C.4.2 ECDAA with curves
                                    ECC_NIST_P256 [F1864]
                                    ECC_BN_P256 [159465].


Implementation Note to FCS_COP.1/ECDAA:
The Trusted Platform Module Library Part 1 [5], section C.4.2 and C.2.5 defines in step h) a KDFa
function to derive r. The KDFa function in this TOE uses the string “ECDAA_Commit_{EA5BA50A-
C633-4F48-BBB3-ED64719EB228}” instead the defined string “ECDAA Commit” as label.
Additionally the Trusted Platform Module Library Part 1 [5], specifies to use the nameAlg hash
algorithm for the KDFa function, this TOE uses the constant “SHA256” ” hash algorithm in this
place.
End of Implementation Note.




FCS_COP.1/ECDEC               Cryptographic operation (decryption)
              Hierarchical to:       No other components.
              Dependencies:          [FDP_ITC.1 Import of user data without security attributes, or
                                     FDP_ITC.2 Import of user data with security attributes, or
                                     FCS_CKM.1 Cryptographic key generation]
                                     FCS_CKM.4 Cryptographic key destruction

FCS_COP.1.1/ECDEC          The TSF shall perform decryption of ECC key in accordance with a
            specified cryptographic algorithm ECDH with curve TPM_ECC_NIST_P256, and
            cryptographic key sizes 256 bit and none that that meet the following: TPM library
            specification [5], NIST Special Publication 800-56A [N856], section 6.2.2.2.



FIA_UID.1     Timing of identification
              Hierarchical to:       No other components.
              Dependencies:          No dependencies.

FIA_UID.1.1   The TSF shall allow
              (1) to    execute    indication  _TPM_Hash_Start,        _TPM_Hash_Data and
                  _TPM_Hash_End,
              (2) to execute commands that do not require authentication,
              (3) to access objects where the entity owner has defined no authentication
                  requirements (authValue, authPolicy),
              (4) none
              on behalf of the user to be performed before the user is identified.


SLB9670_2.0 v7.85   v1.1                                                                    31 of 59
                                                      Security Target for SLB9670_2.0 v7.85
FIA_UID.1.2   The TSF shall require each user to be successfully identified before allowing any
              other TSF-mediated actions on behalf of that user.




FPT_TST.1     TSF testing
              Hierarchical to:      No other components.
              Dependencies:         No dependencies.

FPT_TST.1.1 The TSF shall run a suite of self tests
              (1)   at the request of the authorized user “World”
                    (a) the TPM2_SelfTest command and of selected algorithms using the
                         TPM2_IncrementalSelfTest command,
              (2)   at the conditions
                    (a) Initialization state after reset and before the reception of the first
                        command,
                    (b) prior to execution of a command using a not self-tested function,
              (3)   none
              to demonstrate the correct operation of sensitive parts of the TSF.

FPT_TST.1.2 The TSF shall provide authorized users with the capability to verify the integrity of
            the following TSF data: platformAuth, platformPolicy, ownerAuth, ownerPolicy,
            lockoutAuth, lockoutPolicy, authValue and authPolicy.

FPT_TST.1.3 The TSF shall provide authorized users with the capability to verify the integrity of
            the TSF.




FPT_FLS.1/FS         Failure with preservation of secure state (fail state)
              Hierarchical to:      No other components.
              Dependencies:         No dependencies.

FPT_FLS.1.1/FS       The TSF shall preserve a secure state by entering the Fail state when the
             following types of failures occur:
            (1) If during TPM Restart or TPM Resume, the TPM fails to restore the state saved
                 at the last Shutdown(STATE), the TPM shall enter Failure Mode and return
                 TPM_RC_FAILURE.
            (2) failure detected by TPM2_ContextLoad when the decrypted value of sequence
                 is compared to the stored value created by TPM2_ContextSave(),
            (3) failure detected by self-test according to FPT_TST.1,
            (4) failure detected by the module SysSec and hardware errors (traps)

Note: The module SysSec is a part of the TPM operating system, the module implements
      mechanisms to detect errors in the program flow.



FPT_PHP.3     Resistance to physical attack



SLB9670_2.0 v7.85   v1.1                                                                 32 of 59
                                                            Security Target for SLB9670_2.0 v7.85
                   Hierarchical to:       No other components.
                   Dependencies:          No dependencies.

FPT_PHP.3.1 The TSF shall resist physical manipulation and physical probing to the TSF by
                   responding automatically such that the SFRs are always enforced.



FDP_ACF.1/States Security attribute based access control (operational states)

                   Hierarchical to:       No other components.
                   Dependencies:          FDP_ACC.1 Subset access control
                                          FMT_MSA.3 Static attribute initialisation

FDP_ACF.1.1/States The TSF shall enforce the TPM State Control SFP to objects based on the
            following
            Subjects as defined in Table 72:
            (1) Platform firmware with the security attributes platformAuth and physical
                presence if supported by the TOE,
            (2) all other subjects; their security attributes are irrelevant for this SFP,
                 Objects as defined in Table 83 and Table 94:
            (1) Shutdown BLOB with the security attribute validation status,
            (2) Firmware update data with security attributes signature of the TPM
                     manufacturer and digest,
            (3) all other objects; their security attributes are irrelevant for this SFP.

FDP_ACF.1.2/States The TSF shall enforce the following rules to determine if an operation
            among controlled subjects and controlled objects is allowed:
            (1) The Platform firmware is authorized to change the TPM state to FUM if the
                authenticity of the first digest or the signature could be successfully verified.
            (2) While in FUM state the Platform firmware is authorized to import or activate
                firmware data only after successful verification of its integrity and authenticity
                (see FDP_UIT.1).
            (3) The FUM state shall only be left when the last data block has success fully been
                received by the TOE.
            (4) In the Init state the subject “World” is authorized to execute the commands
                TPM2_HashSequenceStart, TPM2_SequenceUpdate, TPM2_EventSequence-
                Complete, TPM2_SequenceComplete, TPM2_PCR_Extend, TPM2_Startup,
                TPM2_SelfTest, TPM2_GetRandom, TPM2_HierarchyControl, TPM2_Hierar-
                chyChangeAuth,               TPM2_SetPrimaryPolicy,             TPM2_GetCapability,
                TPM2_NV_Read, and the sequence _TPM_Hash_Start, _TPM_Hash_Data, and
                _TPM_Hash_End.
            (5) In the Init state every subject is authorized to process the Resume operation on
                the Shutdown BLOB with state transition to Operational.
            (6) In the Init state every subject is authorized to process the Restart operation on
                the Shutdown BLOB with state transition to Operational.
            (7) In the Init state, if no Shutdown BLOB was generated or if the Shutdown BLOB
                is invalid (see attribute “Validation status”) every subject is authorized to process
                the TPM2_Startup command. In case of the parameter TPM_SU_CLEAR the
                TPM shall change the state to Operational and initialize its internal operational


2 located in the Protection Profile [8]

3 located in the Protection Profile [8]

4 located in the Protection Profile [8]

SLB9670_2.0 v7.85          v1.1                                                              33 of 59
                                                       Security Target for SLB9670_2.0 v7.85
                   variables to default initialization values (Reset), otherwise the TPM shall return
                   an error and stay in the same state.
               (8) In the Operational state, nobody is authorized to execute the commands
                   TPM2_Startup. For all other subjects, objects and operations, the access control
                   rules of the Access Control SFP shall apply (see FDP_ACF.1/AC).
               (9) The Operational state shall change to Self-Test state if the command
                   TPM2_Selftest or TPM2_IncrementalSelfTest is executed or when a test of a
                   dedicated functionality is required (see FPT_TST.1). In the Self-Test state,
                   nobody is authorized to execute any other TPM commands.
               (10) The Self-Test state shall be left only after finishing the intended test of the
                   dedicated functionality. In case of a successful test result the state shall change
                   to Operational, otherwise to Fail.
               (11) In the Fail state, every subject is authorized to execute the commands
                   TPM2_GetTestResult and TPM2_GetCapability.
               (12) In the Fail state the subject World is authorized to send a _TPM_Init
                   indication with state change to Init.
               (13) Any subject is authorized to prepare the TPM for a power cycle using the
                   TPM2_Shutdown command and to create a shutdown BLOB by
                   TPM2_Shutdown(TPM_SU_STATE).

FDP_ACF.1.3/States The TSF shall explicitly authorize access of subjects to objects based on
            the following additional rules: none.


FDP_ACF.1.4/States The TSF shall explicitly deny access of subjects to objects based on the
            following additional rules:
               (1) Once the TPM receives a TPM2_SelfTest command and before completion of all
                   tests, the TPM shall return TPM_RC_TESTING for any command that uses a
                   command that requires a test.

Note to FDP_ACF.1.2/States (4):
According to [PP_ERR] section 3.1 the Number (4) includes commands that are not permitted
execution in the Init state by the TPM Library Specification. The only commands permitted in this
state are TPM2_Startup, _TPM_Hash_Start, _TPM_Hash_Data, _TPM_Hash_End and field
upgrade.
End on note.




FDP_UIT.1/States      Data exchange integrity (operational states)
               Hierarchical to:       No other components.
               Dependencies:          [FDP_ACC.1 Subset access control, or
                                      FDP_IFC.1 Subset information flow control]
                                      [FTP_ITC.1 Inter-TSF trusted channel, or
                                      FTP_TRP.1 Trusted path]

FDP_UIT.1.1/States The TSF shall enforce the TPM state control SFP to receive firmware update
             data in a manner protected from modification, deletion, insertion, replay errors.

FDP_UIT.1.2/States The TSF shall be able to determine on receipt of firmware update data,
             whether modification, deletion, insertion, replay has occurred.



SLB9670_2.0 v7.85    v1.1                                                                    34 of 59
                                                      Security Target for SLB9670_2.0 v7.85
FDP_ACF.1/AC         Security attribute based access control (access control)
              Hierarchical to:      No other components.
              Dependencies:         FDP_ACC.1 Subset access control
                                    FMT_MSA.3 Static attribute initialisation

FDP_ACF.1.1/AC      The TSF shall enforce the Access Control SFP to objects based on the
            following
            Subjects:
            (1) Platform firmware with security attribute authorization state gained by
                authentication with platformAuth or platformPolicy or physical presence if
                supported by the TOE,
            (2) Platform owner with security attribute authorization state gained by
                authentication with ownerAuth or ownerPolicy,
            (3) Privacy administrator with security attribute authorization state gained by
                authentication with endorsementAuth or endorsementPolicy,
            (4) Lockout administrator with security attribute authorization state,
            (5) USER with authentication sate gained with userAuth or authPolicy,
            (6) DUP with authentication sate gained with authPolicy,
            (7) ADMIN with authentication sate gained with userAuth or authPolicy,
            (8) World with no security attributes,
            Objects:
            (1) User key with security attributes TPM_ALG_ID, TPMA_OBJECT,
            (2) TPM objects,
            (3) Clock with security attributes: resetCount, restartCount, safe-flag,
            (4) Data with security attribute “externally provided”.

FDP_ACF.1.2/AC      The TSF shall enforce the following rules to determine if an operation among
            controlled subjects and controlled objects is allowed:
            (1) The Platform firmware authorized with platformAuth, platformPolicy or with
                physical presence if supported by the TOE and the Platform owner are
                authorized to control the persistence of loadable objects in TPM memory
          0      (TPM2_EvictControl). The physical presence is not required if it is not supported
                by the TOE or disabled for TPM2_EvictControl command.
            (2) The Platform firmware platformAuth, platformPolicy or with physical presence if
                supported by the TOE and the Platform owner are authorized to advance the
                value and to adjust the rate of advance of the TPMs clock (TPM2_ClockSet,
                TPM2_ClockRateAdjust). The physical presence is not required if it is not
                supported by the TOE or disabled for the TPM2_ClockSet respective
                TPM2_ClockRateAdjust command.
            (3) Any subject is authorized to get the current value of time, clock, resetCount and
                restartCount (TPM2_ReadClock).
            (4) A subject with the role USER endorsed by the Privacy administrator and the
                keyHandle identifier of a loaded key that can perform digital signatures is
                authorized to get the current value of time and clock (TPM2_GetTime).
            (5) No subject is authorized to set the clock to a value less than the current value of
                clock using the TPM2_ClockSet command.
            (6) No subject is authorized to set the clock to a value greater than its maximum
                value (0xFFFF000000000000) using the TPM2_ClockSet command.
            (7) A subject with the role USER is authorized to generate digital signatures using
                the command TPM2_Sign for externally provided data (hash). The user
                authorization shall be done based on the required authorization of the key that
                will perform signing. The key attributes shall allow the signing operation for
                externally provided data.
            (8) Any subject is authorized to verify digital signatures using the command
                TPM2_VerifySignature.

SLB9670_2.0 v7.85   v1.1                                                                   35 of 59
                                                     Security Target for SLB9670_2.0 v7.85
              (9) Any subject is authorized to request data from the random number generator
                  using the command TPM2_GetRandom.
              (10) Any subject is authorized to add additional information to the state of the
                  random number generator using the command TPM2_StirRandom.
              (11) Any subject is authorized to perform RSA encryption using the command
                  TPM2_RSA_Encrypt for externally provided data. The key attributes shall allow
                  the encrypt operation for externally provided data.
              (12) A subject with the role USER is authorized to perform RSA decryption using
                  the command TPM2_RSA_Decrypt for externally provided data. The user
                  authorization shall be done based on the required authorization of the key that
                  will be used for decryption. The key attributes shall allow the decrypt operation
                  for externally provided data.
              (13) Any subject is authorized to generate ECC ephemeral key pairs using the
                  command TPM2_ECDH_KeyGen.
              (14) A subject with the role USER is authorized to recover a value that is used in
                  ECC based key sharing protocols using the command TPM2_ECDH_ZGen. The
                  user authorization shall be done based on the required authorization of the
                  involved private key.
              (15) Any subject is authorized to request the parameters of an identified ECC
                  curve using the command TPM2_ECC_Parameters.
              (16) The subject USER is authorized to start a HMAC sequence using the
                  command TPM2_HMAC_Start.
              (17) The subject World is authorized to start a hash or event sequence using the
                  command TPM2_HashSequenceStart.
              (18) The subject USER is authorized to add data to a hash, event or HMAC
                  sequence using the command TPM2_SequenceUpdate.
              (19) The subject USER is authorized to add the last part of data (if any) to a hash
                  or HMAC sequence using the command TPM2_SequenceComplete.
              (20) The subject USER is authorized to add the last part of data (if any) to an
                  event sequence using the command TPM2_EventSequenceComplete.
              (21) Any subject is authorized to perform hash operations on a data buffer using
                  the command TPM2_Hash.
              (22) A subject with the role USER is authorised to perform HMAC operations on a
                  data buffer. The user authorisation shall be done based on the required
                  authorization of the involved symmetric key.
              (23) A subject with the role USER is authorised to generate HMACs using the
                  command TPM2_HMAC for externally provided data (hash). The user
                  authorization shall be done based on the required authorization of the key that
                  will perform the HMAC. The key attributes shall allow the signing operation for
                  externally provided data.

FDP_ACF.1.3/AC      The TSF shall explicitly authorize access of subjects to objects based on the
            following additional rules: none.

FDP_ACF.1.4/AC      The TSF shall explicitly deny access of subjects to objects based on the
            following additional rules: none.




SLB9670_2.0 v7.85   v1.1                                                                   36 of 59
                                                      Security Target for SLB9670_2.0 v7.85

7.2.1 Extended Component FCS_RNG.1

To define the IT security functional requirements of the TOE an additional family (FCS_RNG) of
the Class FCS (cryptographic support) is defined here. This family describes the functional
requirements for random number generation used for cryptographic purposes.


       FCS_RNG.1             Random Number Generation

       Hierarchical to:      No other components
       Dependencies:         No dependencies

       FCS_RNG.1             Random numbers generation Class DRG.3 according to [11]

       FCS_RNG.1.1           The TSF shall provide a deterministic random number generator that
                             implements: NIST SP 800-90A CTR_DRBG. [N890]

       FCS_RNG.1.2           The TSF shall provide random numbers that meet: Statistical test
                             suites cannot practically distinguish the random numbers from output
                             sequences of an ideal RNG.


Application Note 2:   To fulfill the requirements defined in “Anwendungshinweise und Interpre-
                      tationen zum Schema (AIS)” respectively “Functionality classes for
                      random number generators” [11],
                      a refinement of the functional requirement FCS_RNG.1 is given in the
                      following:

       FCS_RNG.1             Random numbers generation Class DRG.3 according to [11]

       FCS_RNG.1.1           The TSF shall provide a deterministic random number generator that
                             implements:

              (DRG.3.1)      If initialized with a random seed using a PTRNG of class
                             PTG.2 as random source, the internal state of the RNG
                             shall have at least 100 bit of entropy and implements:
                             NIST SP 800-90A CTR_DRBG. [N890]

              (DRG.3.2)      The RNG provides forward secrecy.

              (DRG.3.3)      The RNG provides backward secrecy even if the current
                             internal state is known.

       FCS_RNG.1.2 The TSF shall provide random numbers that meet:

              (DRG.3.4)      The RNG, initialized with a random seed, during every startup and
                             after 231 requests, of minimal 128 bits using a PTRNG of class
                             PTG.2, generates output for which more than 234 strings of bit length
                             128 are mutually different with probability w>1-2-16.

              (DRG.3.5)      Statistical test suites cannot practically distinguish the random
                             numbers from output sequences of an ideal RNG. The random
                             numbers must pass test procedure A.

End of Application Note 2.
SLB9670_2.0 v7.85     v1.1                                                                  37 of 59
                                                        Security Target for SLB9670_2.0 v7.85
7.3 Security Assurance Requirements

The security assurance requirements (SAR) of the TOE are the assurance components of the
Evaluation Assurance Level 4 (EAL4) as defined in the Common Criteria [1] [2] [3] and augmented
with ALC_FLR.1 and AVA_VAN.4. They are all drawn from the Common Criteria V3.1 part 3. The
security assurance components are listed in Table 4.
The security assurance requirements defined in Table 4 are defined in section 7.2 of the PP [8].


                                 Table 3: Assurance components


            Assurance         Assurance       Assurance Components description
       #
            Class             Component

       1                      ADV_ARC.1       Security architecture description

            ADV:
       2                      ADV_FSP.4       Complete functional specification
            Development

       3                      ADV_IMP.1       Implementation representation of the TSF

       4                      ADV_TDS.3       Basic modular design

            AGD: Guidance
       5                      AGD_OPE.1       Operational user guidance
            documents

       6                      AGD_PRE.1       Preparative procedures

                                              Production support, acceptance procedures
       7                      ALC_CMC.4
                                              and automation
            ALC: Life-cycle
       8                      ALC_CMS.4       Problem tracking CM coverage
            support

       9                      ALC_DEL.1       Delivery procedures

       10                     ALC_DVS.1       Identification of security measures

       11                     ALC_LCD.1       Developer defined life-cycle model

       12                     ALC_FLR.1       Basic flow remediation                 -- augmented

       13                     ALC_TAT.1       Well-defined development tools

       14                     ASE_CCL.1       Conformance claims

            ASE: Security
       15   Target            ASE_ECD.1       Extended components definition
            evaluation

       16                     ASE_INT.1       ST introduction

       17                     ASE_OBJ.2       Security objectives

       18                     ASE_REQ.2       Derived security requirements

       19                     ASE_SPD.1       Security problem definition

       20                     ASE_TSS.1       TOE summary specification


SLB9670_2.0 v7.85    v1.1                                                                           38 of 59
                                                          Security Target for SLB9670_2.0 v7.85

         21   ATE: Tests       ATE_COV.2        Analysis of coverage

         22                    ATE_DPT.1        Testing: basic design

         23                    ATE_FUN.1        Functional testing

         24                    ATE_IND.2        Independent testing – sample

              AVA :
         25   Vulnerability    AVA_VAN.4        Methodical vulnerability analysis   -- augmented
              assessment




7.4    Security Requirements Rationale
The security requirements rationale of the TOE are defined and described in the PP [8], section 7.3
“Security Requirements rationale” and in the following description.

The mapping of the iterations of FCS_COP.1 to the security objectives are the following:



      TOE Security Functional Requirements Objective

                                                 O.Export
      FCS_COP.1/RSAED1                           O.Import
                                                 O.Sessions

                                                 O.MessageNR
      FCS_COP.1/RSASign1
                                                 O.Reporting




A detailed justification required for suitability of the security functional requirements to achieve the
security objectives is given below.

The security objective O.Export requires that the TOE protects the confidentiality and integrity of
data in case of export. Further, the TOE shall unambiguously associate the data security attributes
with the data to be exported. This objective is addressed by the following SFRs:
     FCS_COP.1/RSAED1 requires that the TSF provides the ability to perform RSA based
        asymmetric encryption and decryption of data.


The security objective O.Import requires that the TOE ensures that the data security attributes are
being imported with the imported data and that the data is from authorised source. Further,the TOE
shall verify the security attributes according to the TSF access control rules. The TOE shall support
the protection of confidentiality and the verification of the integrity of imported data (except the
verification of the integrity of the data within a sealed data blob). This objective is addressed by the
following SFRs:
      FCS_COP.1/RSAED1 requires that the TSF provides the ability to perform asymmetric
        encryption and decryption of data.



SLB9670_2.0 v7.85       v1.1                                                                       39 of 59
                                                     Security Target for SLB9670_2.0 v7.85
The security objective O.MessageNR requires that the TOE provides user data integrity, source
authentication and the basis for source non-repudiation when exchanging data with a remote
system. This objective is addressed by the following SFR:
     FCS_COP.1/RSASign1 requires the TSF to be able to perform signature generation and
       verification. This can be used to support source authentication and source nonrepudiation
       when exchanging data with a remote system.


The security objective O.Sessions requires that the TOE provides the confidentiality of the para-
meters of commands within an authorised session and the integrity of the audit log of commands.
This objective is addressed by the following SFRs:
    FCS_COP.1/RSAED1 requires that the TSF provides the ability to perform asymmetric
       encryption and decryption of data.

The security objective O.Reporting requires that the TOE reports measurement digests and
attests to the authenticity of measurement digests. This objective is addressed by the following
SFR:
     FCS_COP.1/RSASign1 requires the TSF to be able to perform signature generation and
        verification. This can be used to support authentication of measurement digests.




SLB9670_2.0 v7.85   v1.1                                                                 40 of 59
                                                         Security Target for SLB9670_2.0 v7.85
8 TOE Summary Specification (ASE_TSS)
The product overview is given in section 2.1. In the following the security functionality and the
assurance measures of the TOE are described.

8.1     TOE Security Features
This section contains the definition and description of the security features (SF) of the TOE. The
TOE provides five security features (SF) to meet the security functional requirements. The security
features are:
        SF_CRY:      Cryptographic Support
        SF_I&A:      Identification and Authentication
        SF_G&T       General and Test
        SF_OBH       Object Hierarchy
        SF_TOP       TOE Operation



8.1.1    SF_CRY - Cryptographic Support

There are several functions within the TOE related to cryptographic support: generation of random
numbers, generation of asymmetric key pairs, RSA and ECC digital signature (generation and
verification), RSA, ECC and AES data encryption and decryption, key destruction, the generation
of hash values and the generation and verification of MAC values.
The TOE supports the generation of cryptographic keys in accordance with the specified
cryptographic key generation algorithm RSA key generator and ECC key generator and specified
cryptographic key sizes RSA 1024 and 2048 bits that meet the following: [RFC3447], [F1864] and
[N890] and ECC with key sizes of 256 bits that meet [F1864] and [N890]. The source of
randomness is the internal random generator.
The covered security functional requirements are FCS_CKM.1/PKRSA, FCS_CKM.1/PKECC,
FCS_CKM.1/RSA and FCS_CKM.1/ECC.
The TOE supports the generation of symmetric cryptographic keys in accordance with the
specified cryptographic key generation algorithm AES key generator and specified cryptographic
key sizes 128 bits that meet [N8133] and optional [N808].
The covered security functional requirements are FCS_CKM.1/PKSYM and FCS_CKM.1/SYMM.
The TOE supports the destruction of cryptographic keys by erasure of memory
areas containing cryptographic keys in accordance with FIPS PUB 140-2 [F1402], section 4.7.6.
The covered security functional requirement is FCS_CKM.4.
The TOE performs the encryption and decryption in accordance with the specified cryptographic
algorithm AES in the CFB mode and cryptographic key size of 128 bits that meet [18033] and
[10116].
The covered security functional requirement is FCS_COP.1/AES.
The TOE performs the hash value calculation in accordance with the specified cryptographic
algorithm SHA-1 and SHA-256 (cryptographic key sizes not available) that meets [F1804].
The covered security functional requirement is FCS_COP.1/SHA.
The TOE performs HMAC value calculation and verification in accordance with the specified
cryptographic algorithm HMAC with SHA-1 and SHA-256 and cryptographic key sizes 160 bits and
256 bits that meets [9797] and [10118].
The covered security functional requirement is FCS_COP.1/HMAC.
SLB9670_2.0 v7.85   v1.1                                                                   41 of 59
                                                        Security Target for SLB9670_2.0 v7.85
The TOE performs asymmetric encryption and decryption in accordance with the specified
cryptographic algorithm RSA without padding, RSAES-PKCS1-v1_5, RSAES-OAEP and
cryptographic key sizes 1024 bits and 2048 bits that meet [RFC3447].
The covered security functional requirements are FCS_COP.1/RSAED1 and FCS_COP.1/RSAED.
The TOE performs signature generation and signature verification in accordance with the specified
cryptographic algorithm RSASSA-PKCS1v1_5, RSASSA_PSS and cryptographic key sizes 1024
bits and 2048 bits that meet [RFC3447].
The covered security functional requirement is FCS_COP.1/RSASign1 and FCS_COP.1/RSASign.
The TOE performs signature generation and signature verification in accordance with the specified
cryptographic algorithm ECDSA with curve TPM_ECC_NIST_P256 and cryptographic key sizes
256 bits that meet TPM library specification [5] section C.4 and [14888].
The covered security functional requirement is FCS_COP.1/ECDSA.
The TOE performs signature generation in accordance with the specified cryptographic algorithm
ECDAA with curve TPM_ECC_NIST_P256 and TPM_ECC_BN_P256 and cryptographic key sizes
256 bits that meet TPM library specification [5], section C.4.2.
The covered security functional requirement is FCS_COP.1/ECDAA.
The TOE performs decryption of ECC key in accordance with the specified cryptographic algorithm
ECDH with curve TPM_ECC_NIST_P256 and cryptographic key sizes 256 bits that meet TPM
library specification [5] and [N856], section 6.2.2.2.
The covered security functional requirement is FCS_COP.1/ECDEC.
The TOE provides a deterministic random number generator (DRBG) including a true random
generator, which is used for the seeding of the DRBG, to provide the random numbers. The TOE
provides random numbers that fulfils the requirements from the functional class DRG.3 of [11] and
[N890].The TOE uses the internal true random generator as the source for any randomness that
the processes defined in SF_CRY may require.
The covered security functional requirement is FCS_RNG.1.


The SF_CRY “Cryptographic Support” covers the following security functional requirements:
FCS_CKM.1/PKRSA,       FCS_CKM.1/PKECC,            FCS_CKM.1/PKSYM,           FCS_CKM.1/RSA,
FCS_CKM.1/ECC, FCS_CKM.1/SYMM, FCS_CKM.4, FCS_COP.1/AES, FCS_COP.1/SHA,
FCS_COP.1/HMAC, FCS_COP.1/RSAED1, FCS_COP.1/RSAED, FCS_COP.1/RSASign1,
FCS_COP.1/RSASign, FCS_COP.1/ECDSA, FCS_COP.1/ECDAA, FCS_COP.1/ECDEC and
FCS_RNG.1.



8.1.2   SF_I&A - Identification and Authentication

The TPM provides two mechanisms for the identification and authentication capability to authorize
the use of an Protected Object and Protected Capability. Note that the TCG TPM Library
specification refers to the identification and authentication process and access control as
authorization. The first authentication mechanisms is the prove of knowledge of a shared secret
(password or secret for HMAC) assigned to the entity as authValue. The second mechanism is the
authentication of the user and verification of an intended state of the TPM and its environment
encoded in authPolicy and assigned to the entity.
The TOE provides a mechanism to generate secrets that meet uniform distribution of random
variable generating the value, and is able to enforce the use of TSF generated secrets for nonce
values for authorization sessions unknown authValues.
The covered security functional requirement is FIA_SOS.2.
The TOE use different rules to set the value of security attributes.
SLB9670_2.0 v7.85    v1.1                                                                42 of 59
                                                        Security Target for SLB9670_2.0 v7.85
The covered security functional requirement is FMT_MSA.4/AUTH.
The TOE provides the management functionality of the TSF data by user authorization.
The covered security functional requirement is FMT_MTD.1/AUTH.
TOE detects when the maximal tries of unsuccessful authentication attempts occur for objects and
NV Index where DA is active and blocks the authorizations for a defined time.
The covered security functional requirement is FIA_AFL.1/Recover.
The TOE detect when one unsuccessful authentication attempt occur using lockoutAuth in the
command TPM2_DictionaryAttackLockReset and blocks the TPM2_DictionaryAttackLockReset
and TPM2_DictionaryAttackParameters commands for a defined time.
The covered security functional requirement is FIA_AFL.1/Lockout.
TOE detects when the pinCount successful/unsuccessful authentication events exceeds pinLimit
for an NV Index with the attributes TPM_NT_PIN_PASS/TPM_NT_PIN_FAIL and blocks further
authorization if number of successful/unsuccussful events has been met.
The covered security functional requirements are FIA_AFL.1/PINPASS and FIA_AFL.1/PINFAIL.
The TOE allows access to a defined number of commands and objects for the user to be
performed before the user is authenticated/identified.
The covered security functional requirements are FIA_UID.1 and FIA_UAU.1.
The TOE provides different authentication mechanisms to support user authentication and
authenticate any user's claimed identity according to the different rules. The TOE provides re-
authentication of the user for multiple command processing.
The covered security functional requirements are FIA_UAU.5 and FIA_UAU.6.
The TOE associate security attributes with subjects acting on the behalf of that user. The TOE
enforces different rules on the initial association of user security attributes with subjects acting on
the behalf of users and enforces different rules governing changes to the user security attributes
associated with subjects acting on the behalf of users.
The covered security functional requirement is FIA_USB.1.


The SF_I&A “Identification and Authentication” covers the following security functional
requirements:  FIA_SOS.2,   FIA_MSA.4/AUTH,    FMT_MTD.1/AUTH,      FIA_AFL.1/Recover,
FIA_AFL.1/Lockout, FIA_AFL.1/PINPASS, FIA_AFL.1/PINFAIL, FIA_UID.1, FIA_UAU.1,
FIA_UAU.5, FIA_UAU.6 and FIA_USB.1.



8.1.3 SF_G&T – General and Test

The TOE provides the roles: Platform firmware, Platform owner, Privacy Administrator, Lockout
Administrator, User, Admin, DUP and World and associates users with roles. The roles are
enforced within the TOE because there are specific commands and specific keys bond to different
token.
The covered security functional requirement is FMT_SMR.1.
The TOE performs different management functions.
The covered security functional requirement is FMT_SMF.1.
The TOE ensures that only secure values are accepted for security attributes.
The covered security functional requirement is FMT_MSA.2.
The TOE provides reliable time stamps as number of milliseconds the TOE has been powered
since initialization of the Clock value.
The covered security functional requirement is FPT_STM.1.

SLB9670_2.0 v7.85    v1.1                                                                     43 of 59
                                                         Security Target for SLB9670_2.0 v7.85
The TOE ensures that any previous information content of a resource is made unavailable upon
the deallocation of the resource from defined objects.
The covered security functional requirement is FDP_RIP.1.

The TOE supports a suite of self tests during startup and at the request of an authorized user world
to demonstrate the correct operation of sensitive parts of the TSF and to verify the integrity of
stored TSF executable code and parts of TSF data.
The covered security functional requirement is FPT_TST.1.

The TOE preserves a secure state by entering the Fail state when a failure during TPM Restart or
Resume occurs, a failure is detected by TPM2_ContecxtLoad or the self test, of any crypto
operations including RSA encryption, RSA decryption, AES encryption, AES decryption, SHA-1,
RNG, RSA signature generation, HMAC generation or failure of any commands or internal
operations and authorization occurs.
The covered security functional requirement is FPT_FLS.1/FS.

The TOE preserves a secure state by shutdown, when detecting a physical attack or an
environmental condition which is out of spec value.
The covered security functional requirement is FPT_FLS.1/SD.

The TOE resists physical manipulation and physical probing to the TSF by responding
automatically such that the SFRs are always enforced.
The TOE supports the following functions for protection against and detection of physical
manipulation and probing:
  The correct function of the TOE is only given in the specific range of the environmental
   operating parameters. To prevent an attack exploiting those circumstances the external clock
   conditions, the temperature and electro magnetic radiation (e.g. light) are observed to detect if
   the specified range is left. The TOE falls into the defined secure state in case of a specified
   range violation. The defined secure state causes the chip internal reset process.
 The data in the EEPROM are automatically monitored by the EDC. In case of a 1 bit error the
   memory content is corrected by the ECC, in case of more bit errors the TOE enters the secure
   state.
 Several mechanisms protect the TOE against snooping the design or the user data during
   operation and even if it is out of operation (power down). There are topological design
   measures for disguise, such as the protection of security critical lines by specific intelligent and
   intrinsic shielding including secure wiring of security critical signals. The entire design is kept in
   a non standard way to prevent attacks using standard analysis methods. A dedicated CPU with
   a non public bus protocol is used which makes analysis complicated.
 The readout of data can be controlled with the use of encryption. An attacker can not use the
   data obtained by espionage due to their encryption. The memory contents of the TOE are
   encrypted on chip to protect against data analysis on stored data as well as on internally
   transmitted data.
 The virtual physical address mapping together with the memory management unit (MMU) gives
   the operating system the possibility to define different access rights for memory areas. In case
   of an access violation the MMU will generate a non maskerable interrupt (NMI) and an interrupt
   service routine react on the access violation.
The covered security functional requirement is FPT_PHP.3.
The TOE enforces the TPM state control, TPM Object Hierarchy, Data import and export,
Measurement and reporting, Access Control, NVM and Credential SFPs to prevent the disclosure
of user data when it is transmitted between physically-separated parts of the TOE.
The covered security functional requirement is FDT_ITT.1.
SLB9670_2.0 v7.85    v1.1                                                                       44 of 59
                                                        Security Target for SLB9670_2.0 v7.85
The TOE protects TSF data from disclosure when it is transmitted between separate parts of the
TOE.
The covered security functional requirement is FPT_ITT.1.
The SF_G&T “General and Test” covers the following security functional requirements:
FMT_SMR.1, FMT_SMF.1, FMT_MSA.2, FPT_STM.1, FDP_RIP.1, FPT_TST.1, FPT_FLS.1/FS,
FPT_FLS.1/SD, FPT_PHP.3, FDT_ITT.1 and FPT_ITT.1.



8.1.4 SF_OBH - Object Hierarchy

The TOE supports different states during his life-cycle as described in [8] section 7.1.4.1 “TPM
Operational States” in detail.
The TOE enforces the TPM State Control SFP on all subjects and objects and all operations
among subjects and objects covered by the SFP. The TOE ensure that all operations between any
subject controlled by the TSF and any object controlled by the TSF are covered by an access
control SFP and enforces different access control rules on controlled subjects and objects.
The covered security functional requirements are FDP_ACC.2/States and FDP_ACF.1/States.
The TOE enforce the TPM state control SFP to restrict the ability to modify the security attributes
TPM state and to provide restrictive default values for security attributes that are used to enforce
the SFP. The TOE enforce the TPM state control SFP to receive firmware update data in a manner
protected from errors and determines on receipt of firmware update data, whether error has
occurred.
The covered security functional requirements are FMT_MSA.1/States, FMT_MSA.3/States and
FDP_UIT.1/States.
The TOE supports three different hierarchies, the platform hierarchy, the storage hierarchy and the
endorsement hierarchy. The root of each TPM hierarchy is defined by a primary seed which is a
random value persistently stored in the TOE. A hierarchy may be disabled.
The TOE monitors user data stored in containers controlled by the TSF for data modifications and
modification of hierarchy on all objects, based on the different attributes.
The covered security functional requirement is FDP_SDI.1.
The TOE enforces the TPM Object Hierarchy SFP on defined subjects, objects and operations and
enforces different rules to determine if an operation among controlled subjects and controlled
objects is allowed and deny access of subjects to objects based on different rules.
The covered security functional requirements are FDP_ACC.1/Hier and FDP_ACF.1/Hier.
The TOE enforces the TPM Object Hierarchy SFP to not allow the modification of the security
attributes fixedTPM and fixedParent.
The covered security functional requirement is FMT_MSA.1/Hier.
The TOE enforces the TPM Object Hierarchy SFP to provide restrictive default values for security
attributes that are used to enforce the SFP and allows the creator of an object in a TPM hierarchy
to specify alternative initial h function SHA-1.
Integrity metrics:      Values that are the results of measurements on the identity for the
                        TPM.
Integrated Circuit:     Component comprising several electronic circuits implemented in a
                        highly miniaturized device using semiconductor technology.
Internal Random Access Memory: RAM integrated in the CPU.
Man-in-the-middle attack: An attack by an entity intercepting communications between two
                     others without their knowledge and by intercepting that communication
                     able to obtain or modify the information between them.
Mechanism:              Logic or algorithm which implements a specific security function in
                        Hardware or software.
Memory:                 Hardware part containing digital information (binary data).
Memory Encryption and Decryption: Method of encoding/decoding data transfer between
                       CPU and memory.
Memory Management Unit (MMU): The MMU controls the different access rights of memory
                areas.
Microcontroller  Controller
Microprocessor  CPU
Migratable:             A key that may be transported outside the specific TPM.
SLB9670_2.0 v7.85      v1.1                                                                     56 of 59
                                                          Security Target for SLB9670_2.0 v7.85
Nonce:                    A nonce is a random number value that provides protection from replay
                        and other attacks.
Non-migratable:         A key that cannot be transported outside the specific TPM. A key
                        that is (statistically) unique to a particular TPM.
Owner:                  The entity that owns the platform in which a TPM is installed. Since
                        there is, by definition, a one-to-one relationship between the TPM and
                        the platform, the Owner is also the Owner of the TPM. The Owner of
                        the platform is not necessarily the “user” of the platform (e.g., in a
                        corporation, the Owner of the platform might be the IT department
                        while the user is an employee). The Owner has administration rights
                        over the TPM.
Platform Configuration Register (PCR): A PCR consists of a 160 bit field that holds a
                     cumulatively updated hash value and a 4 byte status field.
Private Endorsement Key (PRIVEK): The private key of the key pair that proves that a TPM
                   is a genuine TPM. The PRIVEK is (statistically) unique to only one
                   TPM.
Protected function:     Access to this function requires an authorization process.
Public Endorsement Key(PUBEK): The public key that proves that a TPM is a genuine TPM.
                   The PUBEK is (statistically) unique to only one TPM.
Protection Profile:     A document that defines all attacks and how they are resisted by the
                        TPM, the RTM, and the methods by which these are incorporated into
                        the platform.
Random Access Memory:                Volatile memory which permits write and read operations.
Random Number Generator:             Hardware part for generating random numbers.
Read Only Memory:                    Nonvolatile memory which permits read operations only.
Resource Management System: Part of the firmware containing EEPROM programming routines.
Root of Trust for
Measurement(RTM):             The point from which all trust in the measurement process is predicated.
Root of Trust for
Reporting(RTR):       The point from which all trust in reporting of measured information is predicated.
Root of Trust for
Storing(RTS):           The point from which all trust in Protected Storage is predicated.
RSA:                    An asymmetric encryption method using two keys: a private key and
                        a public key. Reference: http://www.rsa.com.
SAM:                    Service Algorithm Minimal
Security Feature:        Part(s) of the TOE used to implement part(s) of the security objectives.
Security Target:         Description of the intended state for countering threats.
Self Test Software:      Part of the firmware with routines for controlling the operating state
                        and testing the TOE hardware.
SHA-1:                  A hashing algorithm producing a 160-bit result from an arbitrary source
                        as specified in FIPS 180-4.
SHA-256:                A hashing algorithm producing a 256-bit result from an arbitrary source
                        as specified in FIPS 180-4.
Shielded location:      Storage location within          the   TPM      with   a     protection   against
                        unauthorized access.
SLB9670_2.0 v7.85      v1.1                                                                       57 of 59
                                                        Security Target for SLB9670_2.0 v7.85
Smart Card:           Plastic card in credit card format with built-in chip.
Storage Root Key (SRK): The root key of a hierarchy of keys associated with a TPM;
                  generated within a TPM; a non-migratable key.
Subsystem:           The combination of the TSS and the TPM.
Software:            Information (non-physical part of the system) which is required to
                     implement functionality in conjunction with the hardware (program).
Target of Evaluation: Product or system which is being subjected to an evaluation.
Test Mode:           Operational status phase of the TOE in which actions to test the TOE
                     hardware take place.
Threat:               Action or event that might prejudice security.
TpmProof:             A random number stored within the TPM. The tpmProof is a unique
                      secret for each TPM.
Trusted Platform Module: The set of functions and data that are common to all types of
                   platform, which must be trustworthy if the Subsystem is to be
                   trustworthy; a logical definition in terms of protected capabilities and
                   shielded locations.
Trusted Platform Support Services (TSS): The set of functions and data which are common
                    to all types of platform, which are not required to be trustworthy (and
                    therefore do not need to be part of the TPM).
TCG-protected capability: A function that is protected within the TPM, and has access
                          to TPM secrets.
Trusted Set (TS):     Subsystem capability that must be trustworthy for the subsystem.
TPM Identity:        One of the anonymous PKI identities belonging to a TPM; a TPM may have
                     multiple identities.
User:                 An entity that uses the platform in which a TPM is installed. The only
                      rights that a User has over a TPM are rights given to the User by the
                      Owner. These rights are expressed in the form of authorization data,
                      given by the Owner to the User, that permits access to entities
                      protected by the Owner of the platform (e.g. in a corporation, the
                      owner of the platform might be the IT department while the User is an
                      employee). There can be multiple Users.
User Mode:           Operational status phase of the TOE in which actions intended for the
                     user take place.




SLB9670_2.0 v7.85   v1.1                                                                    58 of 59
            Published by
            Infineon Technologies AG
            81726 Munich, Germany
            © 2018 Infineon Technologies AG.
            All Rights Reserved.

            Do you have a question about this document?
            Email: erratum@infineon.com



            IMPORTANT NOTICE
            The information contained in this Security            For further information on the product, technology,
            Target is given as a hint for the implementation      delivery terms and conditions and prices please
            of the product only and shall in no event be          contact your nearest Infineon Technologies office
            regarded as a description or warranty of a            (www.infineon.com).
            certain functionality, condition or quality of the
            product. Before implementation of the product,
            the recipient of this application note must verify    WARNINGS
            any function and other technical information          Due to technical requirements products may contain
            given herein in the real application. Infineon        dangerous substances. For information on the types
            Technologies hereby disclaims any and all             in question please contact your nearest Infineon
            warranties and liabilities of any kind (including     Technologies office.
            without limitation warranties of non-
            infringement of intellectual property rights of       Except as otherwise explicitly approved by Infineon
            any third party) with respect to any and all          Technologies in a written document signed by
            information given in this Security Target.            authorized representatives of Infineon Technologies,
                                                                  Infineon Technologies’ products may not be used in
            The data contained in this document is                any applications where a failure of the product or
            exclusively intended for technically trained staff.   any consequences of the use thereof can reasonably
            It is the responsibility of customer’s technical      be expected to result in personal injury.
            departments to evaluate the suitability of the
            product for the intended application and the
            completeness of the product information given
            in this document with respect to such
            application.




Infineon Technologies – innovative semiconductor solutions for energy efficiency, mobility and security.




www.infineon.com                                                                              Published by Infineon Technologies AG
